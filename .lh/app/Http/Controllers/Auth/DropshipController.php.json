{
    "sourceFile": "app/Http/Controllers/Auth/DropshipController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1642142357203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1642142508836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n \n         $collect =  $list->getCollection()->transform(function ($item) {\n             $item->productName = $item->belong->name;\n \n-            $item->totalClick  = empty($item->points) ? 0: $item->points->where('status', 'open')->count();\n+            $item->totalClick  = $item->points->where('status', 'open')->count();\n             \n             $item->totalOrder  = $item->orders->count();\n             $item->percent     = $item->totalOrder ? $item->totalOrder / $item->totalClick * 100 : 0;\n             $item->totalOrderFinish  = $item->orders->where('status', 'finished')->count();\n"
                },
                {
                    "date": 1644981549866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,23 @@\n                 'list',\n             )\n         );\n     }\n+    \n+    public function index()\n+    {\n+        $query  =  Product::root()->wherePrefix('dropship')->inventory();\n+        $list   = $query->paginate();\n \n+        return view(\n+            'auth.dropship.index',\n+            compact(\n+                'query',\n+                'list',\n+            )\n+        );\n+    }\n+\n     public function order()\n     {\n         $search = (new Search(\"dropship_order\"))->get();\n         $query  =  Order::has('item')->whereRefId(Auth::id())->wherePrefix('dropship')->search($search);\n"
                },
                {
                    "date": 1644981558776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n                 }\n             );\n     }\n \n-    public function index()\n+    public function dashboard()\n     {\n         $query  =  Product::root()->wherePrefix('dropship')->inventory();\n         $list   = $query->paginate();\n \n@@ -38,9 +38,9 @@\n                 'list',\n             )\n         );\n     }\n-    \n+\n     public function index()\n     {\n         $query  =  Product::root()->wherePrefix('dropship')->inventory();\n         $list   = $query->paginate();\n"
                },
                {
                    "date": 1644981606117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,18 +25,32 @@\n                 }\n             );\n     }\n \n-    public function dashboard()\n+    public function camp()\n     {\n-        $query  =  Product::root()->wherePrefix('dropship')->inventory();\n+        $query  = Link::has('belong')->wherePrefix('dropship')->whereAuthId(Auth::id());\n         $list   = $query->paginate();\n \n+        $collect =  $list->getCollection()->transform(function ($item) {\n+            $item->productName = $item->belong->name;\n+\n+            $item->totalClick  = $item->points->where('status', 'open')->count();\n+            \n+            $item->totalOrder  = $item->orders->count();\n+            $item->percent     = $item->totalOrder ? $item->totalOrder / $item->totalClick * 100 : 0;\n+            $item->totalOrderFinish  = $item->orders->where('status', 'finished')->count();\n+            $item->revenuePending = $item->orders->where('status', '<>', 'finished')->sum('ref_commission');\n+            $item->revenue        = $item->orders->where('status', 'finished')->sum('ref_commission');\n+            return $item;\n+        });\n+\n         return view(\n-            'auth.dropship.index',\n+            'auth.dropship.camp',\n             compact(\n                 'query',\n                 'list',\n+                'collect',\n             )\n         );\n     }\n \n"
                },
                {
                    "date": 1644981612138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n                 }\n             );\n     }\n \n-    public function camp()\n+    public function dashboard()\n     {\n         $query  = Link::has('belong')->wherePrefix('dropship')->whereAuthId(Auth::id());\n         $list   = $query->paginate();\n \n"
                },
                {
                    "date": 1644981678462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n             return $item;\n         });\n \n         return view(\n-            'auth.dropship.camp',\n+            'auth.dropship.dashboard',\n             compact(\n                 'query',\n                 'list',\n                 'collect',\n"
                }
            ],
            "date": 1642142357202,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Classes\\Search;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Str;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Contact;\nuse Illuminate\\Support\\Facades\\Auth;\nuse App\\Models\\Product;\nuse App\\Models\\Link;\nuse App\\Models\\Order;\nuse App\\Models\\Transaction;\n\nclass DropshipController extends Controller\n{\n    function publish(Product $dropship)\n    {\n        $ref    = Auth::id();\n        return Link::ManyOf($dropship)->whereAuthId($ref)\n            ->firstOr(\n                function () use ($dropship, $ref) {\n                    return $dropship->pushlish(uniqid(), 'dropship', $ref);\n                }\n            );\n    }\n\n    public function index()\n    {\n        $query  =  Product::root()->wherePrefix('dropship')->inventory();\n        $list   = $query->paginate();\n\n        return view(\n            'auth.dropship.index',\n            compact(\n                'query',\n                'list',\n            )\n        );\n    }\n\n    public function order()\n    {\n        $search = (new Search(\"dropship_order\"))->get();\n        $query  =  Order::has('item')->whereRefId(Auth::id())->wherePrefix('dropship')->search($search);\n        $list = $query->paginate();\n\n        return view(\n            'auth.dropship.order',\n            compact(\n                'query',\n                'list',\n            )\n        );\n    }\n\n    public function camp()\n    {\n        $query  = Link::has('belong')->wherePrefix('dropship')->whereAuthId(Auth::id());\n        $list   = $query->paginate();\n\n        $collect =  $list->getCollection()->transform(function ($item) {\n            $item->productName = $item->belong->name;\n\n            $item->totalClick  = empty($item->points) ? 0: $item->points->where('status', 'open')->count();\n            \n            $item->totalOrder  = $item->orders->count();\n            $item->percent     = $item->totalOrder ? $item->totalOrder / $item->totalClick * 100 : 0;\n            $item->totalOrderFinish  = $item->orders->where('status', 'finished')->count();\n            $item->revenuePending = $item->orders->where('status', '<>', 'finished')->sum('ref_commission');\n            $item->revenue        = $item->orders->where('status', 'finished')->sum('ref_commission');\n            return $item;\n        });\n\n        return view(\n            'auth.dropship.camp',\n            compact(\n                'query',\n                'list',\n                'collect',\n            )\n        );\n    }\n\n    public function withdraw(Request $request)\n    {\n        $data   =   $request->input();\n        $user   =   Auth::user();\n        $total  =   $user->wallet();\n        $contact = $user->contact;\n        if ($contact) {\n            $contact->update($data);\n        } else {\n            $contact = Contact::create(array_merge($data, ['account_id' =>  $user->id]));\n        }\n        if ($request->total > $total) {\n            return redirect()->back()->with([\n                'status' => 'failed', \n                'message' => __('Số tiền rút vượt quá số dư trong tài khoản!')\n            ]);\n        }\n        $user->withdraw($request->total,'Rút tiền về tài khoản cá nhân' ,'dropship');\n        return redirect()->back()->with([\n            'status' => 'success', \n            'message' => __('Hệ thống đã nhận được yêu cầu!')\n        ]);\n    }\n\n\n    public function transaction()\n    {\n        $user   = Auth::user();\n        $total  = $user->wallet();\n        $query  = Transaction::wherePrefix('dropship');\n        $list   = $query->paginate();\n\n        return view(\n            'auth.dropship.transaction',\n            compact(\n                'query',\n                'list',\n                'total'\n            )\n        );\n    }\n\n    public function share(Product $dropship)\n    {\n        $link =  $this->getLink($dropship);\n        return view(\n            'auth.dropship.share',\n            compact(\n                'link',\n            )\n        );\n    }\n\n    public function getLink(Product $dropship)\n    {\n        if (!Auth::check()) return abort(404);\n\n        $ref    = Auth::id();\n        return Link::ManyOf($dropship)->whereAuthId($ref)\n            ->firstOr(\n                function () use ($dropship, $ref) {\n                    return $dropship->pushlish(uniqid(), 'dropship', $ref);\n                }\n            );\n    }\n}\n"
        }
    ]
}