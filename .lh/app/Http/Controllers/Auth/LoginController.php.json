{
    "sourceFile": "app/Http/Controllers/Auth/LoginController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1642751428611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1642751676082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n \n     protected function authenticated(Request $request, $user)\n     {\n         $user->update(['login_at' => now()]);\n-        dd($user);\n+       \n         if ($request->_redirect)\n             return redirect($request->_redirect)->with([\n                 'status' => 'success', 'message' => __('Đăng nhập thành công')\n             ]);\n"
                }
            ],
            "date": 1642751428611,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Providers\\RouteServiceProvider;\nuse Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\nuse Illuminate\\Support\\Facades\\Validator;\nuse Illuminate\\Http\\Request;\nuse App\\Models\\User;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Str;\n\nclass LoginController extends Controller\n{\n    /*\n    |--------------------------------------------------------------------------\n    | Login Controller\n    |--------------------------------------------------------------------------\n    |\n    | This controller handles authenticating users for the application and\n    | redirecting them to your home screen. The controller uses a trait\n    | to conveniently provide its functionality to your applications.\n    |\n    */\n\n    use AuthenticatesUsers;\n\n    /**\n     * Where to redirect users after login.\n     *\n     * @var string\n     */\n    protected $redirectTo = RouteServiceProvider::HOME;\n\n    /**\n     * Create a new controller instance.\n     *\n     * @return void\n     */\n    public function __construct()\n    {\n        $this->middleware('guest')->except('logout');\n    }\n\n    public function pass()\n    {\n        return view('auth.pass');\n    } \n\n    public function firebase(Request $request)\n    {\n        $validate = Validator::make($request->input(), [\n            'firebase_uid'    => 'required|string|min:3',\n            'firebase_token'  => 'required',\n            'email'  => ['required', 'string', 'email', 'max:191'],\n        ]);\n     \n        if ($validate->fails()) {\n            return redirect()->back()\n                ->withErrors($validate)\n                ->withInput();\n        }\n\n        $user = User::whereEmail($request->email)->firstOr(function () use ($request) {\n            $name = empty($request->name) ? $request->email : $request->name;\n            $pass = $this->data['password'] = Hash::make(Str::random(24));\n            return User::create([\n                'name' => $name,\n                'email' =>  $request->email,\n                'password' => $pass,\n                'firebase_uid'    => $request->firebase_uid,\n                'firebase_token'    => $request->firebase_token,\n\n            ]);\n        });\n        Auth::loginUsingId($user->id);\n        return $this->authenticated($request, $user);\n    }\n\n\n    protected function authenticated(Request $request, $user)\n    {\n        $user->update(['login_at' => now()]);\n        dd($user);\n        if ($request->_redirect)\n            return redirect($request->_redirect)->with([\n                'status' => 'success', 'message' => __('Đăng nhập thành công')\n            ]);\n      \n        return view('auth.pass');\n    }\n\n    public function checkEmail(Request $request)\n    {\n        $validator   = Validator::make($request->input(), [\n            'email' => ['required', 'string', 'email', 'max:191'],\n        ]);\n        if ($validator->fails()) {\n            return redirect()->back()->withErrors($validator)->withInput();\n        }\n        if (User::whereEmail($request->email)->exists()) {\n            return redirect()->route('pass', ['email' => $request->email]);\n        }\n\n        return redirect()->route('register', ['email' => $request->email]);\n    }\n\n    public function logout(Request $request)\n    {\n        Auth::logout();\n\n        $request->session()->invalidate();\n\n        $request->session()->regenerateToken();\n\n        return redirect('/');\n    }\n}\n"
        }
    ]
}